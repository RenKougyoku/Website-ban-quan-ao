@model ShopOnline.Models.UserRegisterViewModel

@{
    ViewBag.Title = "UserRegister";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("SaveUser","UserAccount",FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    <!--content-->
		<div class="content">
				<!--login-->
			<div class="login">
                <div class="main-agileits">
                    <div class="form-w3agile form1">
                        <h3>Đăng kí</h3>
                        <form action="#" method="post">
                            <div class="key">
                                <i class="fa fa-user" aria-hidden="true"></i>
                                <input type="text" value="" name="FirstName" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'FirstName';}" required="" placeholder="FirstName">
                                <div class="clearfix"></div>
                            </div>
                            <div class="key">
                                <i class="fa fa-user" aria-hidden="true"></i>
                                <input type="text" value="" name="LastName" onfocus="this.value = '';" onblur="    if (this.value == '') { this.value = 'LastName'; }" required="" placeholder="LastName">
                                <div class="clearfix"></div>
                            </div>
                            <div class="key">
                                <i class="fa fa-user" aria-hidden="true"></i>
                                <input type="text" value="" name="Username" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Username';}" required="" placeholder="UserName">
                                <div class="clearfix"></div>
                            </div>
                            <div class="key">
                                <i class="fa fa-envelope" aria-hidden="true"></i>
                                <input type="text" value="" name="Email" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Email';}" required="" placeholder="Email">
                                <div class="clearfix"></div>
                            </div>
                            <div class="key">
                                <i class="fa fa-home" aria-hidden="true"></i>
                                <input type="text" value="" name="Address" onfocus="this.value = '';" onblur="    if (this.value == '') { this.value = 'Address'; }" required="" placeholder="Address">
                                <div class="clearfix"></div>
                            </div>
                            <div class="key">
                                <i class="fa fa-lock" aria-hidden="true"></i>
                                <input type="password" value="" name="Password" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Password';}" required="" placeholder="Password">
                                <div class="clearfix"></div>
                            </div>
                            <div class="key">
                                <i class="fa fa-lock" aria-hidden="true"></i>
                                <input type="password" value="" name="Confirm Password" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Confirm Password';}" required="" placeholder="Confirm Password">
                                <div class="clearfix"></div>
                            </div>
                            <input type="submit" value="Create" class="btn btn-default" />
                            <div class=" forg forg-right">
                                @Html.ActionLink("Trở về", "Index", "Home")
                            </div>
					</form>
				</div>
				
			</div>
		</div>
				<!--login-->
		</div>
    <!--content-->
    
    
    
    
    
    @*<div class="form-horizontal">
        <h4>UserRegisterViewModel</h4>
        <hr />
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName)
                @Html.ValidationMessageFor(model => model.UserName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address)
                @Html.ValidationMessageFor(model => model.Address)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password)
                @Html.ValidationMessageFor(model => model.Password)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword)
                @Html.ValidationMessageFor(model => model.ConfirmPassword)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>*@
}

